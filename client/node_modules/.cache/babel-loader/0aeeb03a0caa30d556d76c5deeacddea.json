{"ast":null,"code":"import _defineProperty from \"/Users/rendell/Documents/reactjsproj/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signUpSuccess, signUpFailure, signInSuccess, signInFailure, signOutSuccess, signOutFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUpWithEmail(userPayload) {\n  const _userPayload$payload = userPayload.payload,\n        displayName = _userPayload$payload.displayName,\n        email = _userPayload$payload.email,\n        password = _userPayload$payload.password,\n        confirmPassword = _userPayload$payload.confirmPassword;\n\n  if (password !== confirmPassword) {\n    yield put(signUpFailure(\"passwords don't match\"));\n    return;\n  }\n\n  try {\n    const _ref = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref2 = yield auth.signInWithPopup(googleProvider),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onEmailSignUpStart), call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/rendell/Documents/reactjsproj/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signUpSuccess","signUpFailure","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signUpWithEmail","userPayload","payload","displayName","email","password","confirmPassword","createUserWithEmailAndPassword","user","signInWithGoogle","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isAuthenticated","signOut","onEmailSignUpStart","SIGN_UP_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  signUpSuccess,\n  signUpFailure,\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure\n} from \"./user.actions\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signUpWithEmail(userPayload) {\n  const { displayName, email, password, confirmPassword } = userPayload.payload;\n  if (password !== confirmPassword) {\n    yield put(signUpFailure(\"passwords don't match\"));\n    return;\n  }\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user, { displayName });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* isAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onEmailSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUpWithEmail);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isAuthenticated);\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onEmailSignUpStart),\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}